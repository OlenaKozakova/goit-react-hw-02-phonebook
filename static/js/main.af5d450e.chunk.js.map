{"version":3,"sources":["components/ContactForm.js","components/ContactList.js","components/Filter.js","App.js","index.js"],"names":["INITIAL_STATE","name","number","Form","state","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","pattern","title","required","onChange","Component","ContactList","filteredContact","onDeleteContact","map","id","onClick","Filter","onChangeFilter","App","contacts","filter","duplicateContactCheck","subContact","toLowerCase","nameCheck","find","contact","includes","alert","addContact","newContact","shortid","generate","prevState","formSubmitContacts","data","console","log","e","filterContact","normalizedFilter","deleteContact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af5d450e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n\r\n const INITIAL_STATE = {\r\n  name: '',\r\n  number: '',\r\n};\r\n\r\nclass Form extends Component {\r\n  state = { ...INITIAL_STATE };\r\n\r\n\r\nhandleChange = (event) => {\r\n    const {name, value} = event.target\r\n  this.setState({\r\n    [name]: value\r\n  });\r\n  };\r\n\r\n    handleSubmit = (event) => {\r\n    event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.reset();\r\n    };\r\n    \r\n    reset = () => {\r\n        this.setState({ ...INITIAL_STATE });\r\n    }\r\n   \r\n    render() {\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label htmlFor='name'>\r\n            Name\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n              required\r\n              value={this.state.name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n           <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            />\r\n            </label>\r\n        <button type=\"submit\">Add contact</button>\r\n            </form>\r\n      </div>\r\n    );\r\n  };\r\n};\r\n\r\nexport default Form;","\r\nconst ContactList = ({filteredContact, onDeleteContact}) => (\r\n      <div>\r\n        <ul>\r\n      {filteredContact.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          <p>{name}</p>\r\n          <p>{number}</p>\r\n          <button\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>))}\r\n        </ul>\r\n      </div>\r\n    );\r\n\r\n\r\nexport default ContactList;","import PropTypes from \"prop-types\";\r\n\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <div >\r\n      <label htmlFor=\"filter\">\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          value={value}\r\n          onChange={onChangeFilter}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onChangeFilter: PropTypes.func,\r\n};\r\n\r\nexport default Filter;","import React, { Component } from 'react';\nimport shortid from 'shortid';\n\nimport Form from \"./components/ContactForm\";\nimport ContactList from \"./components/ContactList\";\nimport Filter from './components/Filter';\n  \n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    number: ''\n  }\n\n   duplicateContactCheck = subContact => {\n    const value = subContact.name.toLowerCase();\n    const nameCheck = this.state.contacts.find(contact =>\n      contact.name.toLowerCase().includes(value),\n    );\n\n    nameCheck\n      ? alert(`${nameCheck.name} is already in contacts`)\n      : this.addContact(subContact);\n  };\n  \n  addContact = newContact => {\n    const contact = {\n      id: shortid.generate(),\n      ...newContact,\n    };\n    this.setState(prevState => ({\n      contacts: [...prevState.contacts, contact],\n    }));\n  };\n\n  formSubmitContacts = data => {\n    console.log(data);\n  };\n   \n  onChangeFilter = (e) => {\n    this.setState({ filter: e.target.value });\n  };\n\n  filterContact = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n   deleteContact = id => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== id),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    // eslint-disable-next-line no-lone-blocks\n    const filteredContact = this.filterContact(); {\n      return (\n        <div>\n          <h1>Phonebook</h1>\n          <Form onSubmit={this.duplicateContactCheck} />\n          <h2>Contacts</h2>\n          <Filter onChangeFilter={this.onChangeFilter} value={filter} />\n          <ContactList filteredContact={filteredContact}\n            onDeleteContact={this.deleteContact}\n          />\n        </div>\n      );\n    };\n  };\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}